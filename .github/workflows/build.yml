name: build

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  run-on-repo:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: clone aseprite
        run: |
          git clone --recursive https://github.com/aseprite/aseprite.git
          cd aseprite
          echo "$(pwd)"
          ls
          
      - name: install dependencies
        run: |
          sudo apt install g++ clang libc++-dev libc++abi-dev cmake ninja-build libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev libfontconfig1-dev curl unzip -y
        
      - name: install skia
        run: |
          mkdir -p ~/src/deps/skia
          cd ~/src/deps/skia
          curl -LO https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-Linux-Release-x64-libc++.zip
          unzip ~/src/deps/skia/Skia-Linux-Release-x64-libc++.zip
          echo "$(pwd)"
          ls
          
      - name: build aseprite
        run: |
          cd ~/work/aseprite-build/aseprite-build/aseprite
          mkdir build
          cd build
          export CC=clang
          export CXX=clang++
          cmake \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DCMAKE_CXX_FLAGS:STRING=--stdlib=libc++ \
            -DCMAKE_EXE_LINKER_FLAGS:STRING=--stdlib=libc++ \
            -DLAF_BACKEND=skia \
            -DSKIA_DIR=$HOME/src/deps/skia \
            -DSKIA_LIBRARY_DIR=$HOME/src/deps/skia/out/Release-x64 \
            -DSKIA_LIBRARY=$HOME/src/deps/skia/out/Release-x64/libskia.a \
            -G Ninja ..
          ninja aseprite

      - name: compress release
        run: |
          cd ~/work/aseprite-build/aseprite-build/aseprite
          tar czf aseprite_build.tar.gz ./build/bin/
        
      - name: Get Current Date
        run: echo "RELEASE_TAG=aseprite-$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        
      - name: upload bin folder to release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: Release ${{ env.RELEASE_TAG }}
          files: |
            aseprite/aseprite_build.tar.gz
